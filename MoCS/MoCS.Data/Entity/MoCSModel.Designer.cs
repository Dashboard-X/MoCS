//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MoCSModel", "FK_TournamentAssignment_Assignment", "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.Assignment), "TournamentAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.TournamentAssignment))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_AssignmentEnrollment_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.Team), "AssignmentEnrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.AssignmentEnrollment))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.TournamentAssignment), "AssignmentEnrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.AssignmentEnrollment))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_Submit_AssignmentEnrollment", "AssignmentEnrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.AssignmentEnrollment), "Submit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.Submit))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_Submit_TournamentAssignment", "TournamentAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.TournamentAssignment), "Submit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.Submit))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_TournamentAssignment_Tournament", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.Tournament), "TournamentAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.TournamentAssignment))]
[assembly: EdmRelationshipAttribute("MoCSModel", "FK_Submit_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoCS.Data.Entity.Team), "Submit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoCS.Data.Entity.Submit))]

#endregion

namespace MoCS.Data.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MoCSModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MoCSModelContainer object using the connection string found in the 'MoCSModelContainer' section of the application configuration file.
        /// </summary>
        public MoCSModelContainer() : base("name=MoCSModelContainer", "MoCSModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoCSModelContainer object.
        /// </summary>
        public MoCSModelContainer(string connectionString) : base(connectionString, "MoCSModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoCSModelContainer object.
        /// </summary>
        public MoCSModelContainer(EntityConnection connection) : base(connection, "MoCSModelContainer")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assignment> Assignment
        {
            get
            {
                if ((_Assignment == null))
                {
                    _Assignment = base.CreateObjectSet<Assignment>("Assignment");
                }
                return _Assignment;
            }
        }
        private ObjectSet<Assignment> _Assignment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignmentEnrollment> AssignmentEnrollment
        {
            get
            {
                if ((_AssignmentEnrollment == null))
                {
                    _AssignmentEnrollment = base.CreateObjectSet<AssignmentEnrollment>("AssignmentEnrollment");
                }
                return _AssignmentEnrollment;
            }
        }
        private ObjectSet<AssignmentEnrollment> _AssignmentEnrollment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Submit> Submit
        {
            get
            {
                if ((_Submit == null))
                {
                    _Submit = base.CreateObjectSet<Submit>("Submit");
                }
                return _Submit;
            }
        }
        private ObjectSet<Submit> _Submit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Team
        {
            get
            {
                if ((_Team == null))
                {
                    _Team = base.CreateObjectSet<Team>("Team");
                }
                return _Team;
            }
        }
        private ObjectSet<Team> _Team;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tournament> Tournament
        {
            get
            {
                if ((_Tournament == null))
                {
                    _Tournament = base.CreateObjectSet<Tournament>("Tournament");
                }
                return _Tournament;
            }
        }
        private ObjectSet<Tournament> _Tournament;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TournamentAssignment> TournamentAssignment
        {
            get
            {
                if ((_TournamentAssignment == null))
                {
                    _TournamentAssignment = base.CreateObjectSet<TournamentAssignment>("TournamentAssignment");
                }
                return _TournamentAssignment;
            }
        }
        private ObjectSet<TournamentAssignment> _TournamentAssignment;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assignment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignment(Assignment assignment)
        {
            base.AddObject("Assignment", assignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignmentEnrollment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignmentEnrollment(AssignmentEnrollment assignmentEnrollment)
        {
            base.AddObject("AssignmentEnrollment", assignmentEnrollment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Submit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmit(Submit submit)
        {
            base.AddObject("Submit", submit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Team EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeam(Team team)
        {
            base.AddObject("Team", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tournament EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournament(Tournament tournament)
        {
            base.AddObject("Tournament", tournament);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TournamentAssignment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournamentAssignment(TournamentAssignment tournamentAssignment)
        {
            base.AddObject("TournamentAssignment", tournamentAssignment);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="Assignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assignment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static Assignment CreateAssignment(global::System.Int32 id, global::System.String name, global::System.DateTime createDate, global::System.String path)
        {
            Assignment assignment = new Assignment();
            assignment.Id = id;
            assignment.Name = name;
            assignment.CreateDate = createDate;
            assignment.Path = path;
            return assignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tagline
        {
            get
            {
                return _Tagline;
            }
            set
            {
                OnTaglineChanging(value);
                ReportPropertyChanging("Tagline");
                _Tagline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tagline");
                OnTaglineChanged();
            }
        }
        private global::System.String _Tagline;
        partial void OnTaglineChanging(global::System.String value);
        partial void OnTaglineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_TournamentAssignment_Assignment", "TournamentAssignment")]
        public EntityCollection<TournamentAssignment> TournamentAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentAssignment>("MoCSModel.FK_TournamentAssignment_Assignment", "TournamentAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentAssignment>("MoCSModel.FK_TournamentAssignment_Assignment", "TournamentAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="AssignmentEnrollment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignmentEnrollment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignmentEnrollment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static AssignmentEnrollment CreateAssignmentEnrollment(global::System.Int32 id, global::System.DateTime startDate, global::System.Boolean isActive)
        {
            AssignmentEnrollment assignmentEnrollment = new AssignmentEnrollment();
            assignmentEnrollment.Id = id;
            assignmentEnrollment.StartDate = startDate;
            assignmentEnrollment.IsActive = isActive;
            return assignmentEnrollment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_AssignmentEnrollment_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_AssignmentEnrollment_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_AssignmentEnrollment_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_AssignmentEnrollment_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("MoCSModel.FK_AssignmentEnrollment_Team", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment")]
        public TournamentAssignment TournamentAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TournamentAssignment> TournamentAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TournamentAssignment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "TournamentAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_AssignmentEnrollment", "Submit")]
        public EntityCollection<Submit> Submit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submit>("MoCSModel.FK_Submit_AssignmentEnrollment", "Submit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submit>("MoCSModel.FK_Submit_AssignmentEnrollment", "Submit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="Submit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Submit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Submit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="submitDate">Initial value of the SubmitDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="secondsSinceEnrollment">Initial value of the SecondsSinceEnrollment property.</param>
        /// <param name="isProcessed">Initial value of the IsProcessed property.</param>
        /// <param name="processingDetails">Initial value of the ProcessingDetails property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="fileContents">Initial value of the FileContents property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="statusDate">Initial value of the StatusDate property.</param>
        public static Submit CreateSubmit(global::System.Int32 id, global::System.DateTime submitDate, global::System.String status, global::System.Int64 secondsSinceEnrollment, global::System.Boolean isProcessed, global::System.String processingDetails, global::System.String fileName, global::System.String fileContents, global::System.Byte[] data, global::System.DateTime statusDate)
        {
            Submit submit = new Submit();
            submit.Id = id;
            submit.SubmitDate = submitDate;
            submit.Status = status;
            submit.SecondsSinceEnrollment = secondsSinceEnrollment;
            submit.IsProcessed = isProcessed;
            submit.ProcessingDetails = processingDetails;
            submit.FileName = fileName;
            submit.FileContents = fileContents;
            submit.Data = data;
            submit.StatusDate = statusDate;
            return submit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubmitDate
        {
            get
            {
                return _SubmitDate;
            }
            set
            {
                OnSubmitDateChanging(value);
                ReportPropertyChanging("SubmitDate");
                _SubmitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmitDate");
                OnSubmitDateChanged();
            }
        }
        private global::System.DateTime _SubmitDate;
        partial void OnSubmitDateChanging(global::System.DateTime value);
        partial void OnSubmitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SecondsSinceEnrollment
        {
            get
            {
                return _SecondsSinceEnrollment;
            }
            set
            {
                OnSecondsSinceEnrollmentChanging(value);
                ReportPropertyChanging("SecondsSinceEnrollment");
                _SecondsSinceEnrollment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondsSinceEnrollment");
                OnSecondsSinceEnrollmentChanged();
            }
        }
        private global::System.Int64 _SecondsSinceEnrollment;
        partial void OnSecondsSinceEnrollmentChanging(global::System.Int64 value);
        partial void OnSecondsSinceEnrollmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProcessed
        {
            get
            {
                return _IsProcessed;
            }
            set
            {
                OnIsProcessedChanging(value);
                ReportPropertyChanging("IsProcessed");
                _IsProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProcessed");
                OnIsProcessedChanged();
            }
        }
        private global::System.Boolean _IsProcessed;
        partial void OnIsProcessedChanging(global::System.Boolean value);
        partial void OnIsProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessingDetails
        {
            get
            {
                return _ProcessingDetails;
            }
            set
            {
                OnProcessingDetailsChanging(value);
                ReportPropertyChanging("ProcessingDetails");
                _ProcessingDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessingDetails");
                OnProcessingDetailsChanged();
            }
        }
        private global::System.String _ProcessingDetails;
        partial void OnProcessingDetailsChanging(global::System.String value);
        partial void OnProcessingDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileContents
        {
            get
            {
                return _FileContents;
            }
            set
            {
                OnFileContentsChanging(value);
                ReportPropertyChanging("FileContents");
                _FileContents = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileContents");
                OnFileContentsChanged();
            }
        }
        private global::System.String _FileContents;
        partial void OnFileContentsChanging(global::System.String value);
        partial void OnFileContentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StatusDate
        {
            get
            {
                return _StatusDate;
            }
            set
            {
                OnStatusDateChanging(value);
                ReportPropertyChanging("StatusDate");
                _StatusDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusDate");
                OnStatusDateChanged();
            }
        }
        private global::System.DateTime _StatusDate;
        partial void OnStatusDateChanging(global::System.DateTime value);
        partial void OnStatusDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_AssignmentEnrollment", "AssignmentEnrollment")]
        public AssignmentEnrollment AssignmentEnrollment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentEnrollment>("MoCSModel.FK_Submit_AssignmentEnrollment", "AssignmentEnrollment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentEnrollment>("MoCSModel.FK_Submit_AssignmentEnrollment", "AssignmentEnrollment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssignmentEnrollment> AssignmentEnrollmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssignmentEnrollment>("MoCSModel.FK_Submit_AssignmentEnrollment", "AssignmentEnrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssignmentEnrollment>("MoCSModel.FK_Submit_AssignmentEnrollment", "AssignmentEnrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_TournamentAssignment", "TournamentAssignment")]
        public TournamentAssignment TournamentAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_Submit_TournamentAssignment", "TournamentAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_Submit_TournamentAssignment", "TournamentAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TournamentAssignment> TournamentAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TournamentAssignment>("MoCSModel.FK_Submit_TournamentAssignment", "TournamentAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TournamentAssignment>("MoCSModel.FK_Submit_TournamentAssignment", "TournamentAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_Submit_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_Submit_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("MoCSModel.FK_Submit_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("MoCSModel.FK_Submit_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String name, global::System.String password, global::System.DateTime createDate, global::System.Int64 score, global::System.Boolean isAdmin)
        {
            Team team = new Team();
            team.Id = id;
            team.Name = name;
            team.Password = password;
            team.CreateDate = createDate;
            team.Score = score;
            team.IsAdmin = isAdmin;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Members
        {
            get
            {
                return _Members;
            }
            set
            {
                OnMembersChanging(value);
                ReportPropertyChanging("Members");
                _Members = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Members");
                OnMembersChanged();
            }
        }
        private global::System.String _Members;
        partial void OnMembersChanging(global::System.String value);
        partial void OnMembersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int64 _Score;
        partial void OnScoreChanging(global::System.Int64 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_AssignmentEnrollment_Team", "AssignmentEnrollment")]
        public EntityCollection<AssignmentEnrollment> AssignmentEnrollment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentEnrollment>("MoCSModel.FK_AssignmentEnrollment_Team", "AssignmentEnrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentEnrollment>("MoCSModel.FK_AssignmentEnrollment_Team", "AssignmentEnrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_Team", "Submit")]
        public EntityCollection<Submit> Submit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submit>("MoCSModel.FK_Submit_Team", "Submit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submit>("MoCSModel.FK_Submit_Team", "Submit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="Tournament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tournament : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tournament object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Tournament CreateTournament(global::System.Int32 id, global::System.String name, global::System.DateTime createDate)
        {
            Tournament tournament = new Tournament();
            tournament.Id = id;
            tournament.Name = name;
            tournament.CreateDate = createDate;
            return tournament;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_TournamentAssignment_Tournament", "TournamentAssignment")]
        public EntityCollection<TournamentAssignment> TournamentAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentAssignment>("MoCSModel.FK_TournamentAssignment_Tournament", "TournamentAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentAssignment>("MoCSModel.FK_TournamentAssignment_Tournament", "TournamentAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoCSModel", Name="TournamentAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TournamentAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TournamentAssignment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="assignmentOrder">Initial value of the AssignmentOrder property.</param>
        /// <param name="points1">Initial value of the Points1 property.</param>
        /// <param name="points2">Initial value of the Points2 property.</param>
        /// <param name="points3">Initial value of the Points3 property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static TournamentAssignment CreateTournamentAssignment(global::System.Int32 id, global::System.Int32 assignmentOrder, global::System.Int32 points1, global::System.Int32 points2, global::System.Int32 points3, global::System.Boolean isActive, global::System.DateTime createDate)
        {
            TournamentAssignment tournamentAssignment = new TournamentAssignment();
            tournamentAssignment.Id = id;
            tournamentAssignment.AssignmentOrder = assignmentOrder;
            tournamentAssignment.Points1 = points1;
            tournamentAssignment.Points2 = points2;
            tournamentAssignment.Points3 = points3;
            tournamentAssignment.IsActive = isActive;
            tournamentAssignment.CreateDate = createDate;
            return tournamentAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignmentOrder
        {
            get
            {
                return _AssignmentOrder;
            }
            set
            {
                OnAssignmentOrderChanging(value);
                ReportPropertyChanging("AssignmentOrder");
                _AssignmentOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignmentOrder");
                OnAssignmentOrderChanged();
            }
        }
        private global::System.Int32 _AssignmentOrder;
        partial void OnAssignmentOrderChanging(global::System.Int32 value);
        partial void OnAssignmentOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points1
        {
            get
            {
                return _Points1;
            }
            set
            {
                OnPoints1Changing(value);
                ReportPropertyChanging("Points1");
                _Points1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points1");
                OnPoints1Changed();
            }
        }
        private global::System.Int32 _Points1;
        partial void OnPoints1Changing(global::System.Int32 value);
        partial void OnPoints1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points2
        {
            get
            {
                return _Points2;
            }
            set
            {
                OnPoints2Changing(value);
                ReportPropertyChanging("Points2");
                _Points2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points2");
                OnPoints2Changed();
            }
        }
        private global::System.Int32 _Points2;
        partial void OnPoints2Changing(global::System.Int32 value);
        partial void OnPoints2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points3
        {
            get
            {
                return _Points3;
            }
            set
            {
                OnPoints3Changing(value);
                ReportPropertyChanging("Points3");
                _Points3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points3");
                OnPoints3Changed();
            }
        }
        private global::System.Int32 _Points3;
        partial void OnPoints3Changing(global::System.Int32 value);
        partial void OnPoints3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_TournamentAssignment_Assignment", "Assignment")]
        public Assignment Assignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("MoCSModel.FK_TournamentAssignment_Assignment", "Assignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("MoCSModel.FK_TournamentAssignment_Assignment", "Assignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Assignment> AssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("MoCSModel.FK_TournamentAssignment_Assignment", "Assignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Assignment>("MoCSModel.FK_TournamentAssignment_Assignment", "Assignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_AssignmentEnrollment_TournamentAssignment", "AssignmentEnrollment")]
        public EntityCollection<AssignmentEnrollment> AssignmentEnrollment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentEnrollment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "AssignmentEnrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentEnrollment>("MoCSModel.FK_AssignmentEnrollment_TournamentAssignment", "AssignmentEnrollment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_Submit_TournamentAssignment", "Submit")]
        public EntityCollection<Submit> Submit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submit>("MoCSModel.FK_Submit_TournamentAssignment", "Submit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submit>("MoCSModel.FK_Submit_TournamentAssignment", "Submit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoCSModel", "FK_TournamentAssignment_Tournament", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("MoCSModel.FK_TournamentAssignment_Tournament", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("MoCSModel.FK_TournamentAssignment_Tournament", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("MoCSModel.FK_TournamentAssignment_Tournament", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("MoCSModel.FK_TournamentAssignment_Tournament", "Tournament", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
